#!/usr/bin/env python3
import sys
import math

def solve(N: int, x: "List[int]", y: "List[int]"):
    ans = 0
    for i in range(N):
        for j in range(N):
            if(i == j):
                continue
            ans = max(ans,math.sqrt((x[j] - x[i]) ** 2 + (y[j]-y[i]) ** 2 ))

    print(ans)
    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    x = [int()] * (N-1-0+1)  # type: "List[int]" 
    y = [int()] * (N-1-0+1)  # type: "List[int]" 
    for i in range(N-1-0+1):
        x[i] = int(next(tokens))
        y[i] = int(next(tokens))
    solve(N, x, y)

if __name__ == '__main__':
    main()
