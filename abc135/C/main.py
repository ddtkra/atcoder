#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]", B: "List[int]"):
    ans = 0

    # Bを配る
    for i in range(N):
        # A[i] に対してB[i]を配る
        # モンスターのほうが多い
        if(B[i] <= A[i]):
            ans += B[i]
            A[i] -= B[i]
            B[i] = 0
        # 勇者のほうが多い
        else:
            ans += A[i]
            B[i] -= A[i]
            A[i] = 0

        # A[i+1]に対して配る
        # モンスターのほうが多い
        if(B[i] <= A[i+1]):
            ans += B[i]
            A[i+1] -= B[i]
            B[i] = 0
        # 勇者のほうが多い
        else:
            ans += A[i+1]
            B[i] -= A[i+1]
            A[i+1] = 0

    print(ans)

    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [ int(next(tokens)) for _ in range(N+1) ]  # type: "List[int]"
    B = [ int(next(tokens)) for _ in range(N) ]  # type: "List[int]"
    solve(N, A, B)

if __name__ == '__main__':
    main()
