#!/usr/bin/env python3
import sys


def solve(N: int, X: int, L: "List[int]"):
    d = [0]*(N+1)
    for i in range(1,N+1):
        d[i] = d[i-1] + L[i-1]

    ans = 0
    for i in range(N+1):
        if(d[i] <= X):
            ans += 1

    print(ans)
    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    X = int(next(tokens))  # type: int
    L = [ int(next(tokens)) for _ in range(N) ]  # type: "List[int]"
    solve(N, X, L)

if __name__ == '__main__':
    main()
