#!/usr/bin/env python3
import sys


def solve(N: int, a: "List[int]"):
    # from collections import defaultdict
    d = {}
    
    x = sorted(a)
    idx = 0
    
    for y in x:
        if y not in d:
            d[y] = idx
            idx += 1

    for i in[d[i] for i in a]:
        print(i)


    return


# Generated by 1.1.3 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    a = [ int(next(tokens)) for _ in range(N) ]  # type: "List[int]"
    solve(N, a)

if __name__ == '__main__':
    main()
