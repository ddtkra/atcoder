#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    if(len([i for i in A if i <= 0])%2):
        print(sum(map(abs,A))-2*min(map(abs,A)))
    else:
        print(sum(map(abs,A)))

    return

# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [ int(next(tokens)) for _ in range(N) ]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
