#!/usr/bin/env python3
import sys
from collections import Counter

def solve(N: int, A: "List[int]"):
    s = [0]*(N+1)

    for i in range(N):
        s[i+1] = s[i] + A[i]

    # print(s[:10])

    c = Counter(s)

    ans = 0
    for k,v in c.items():
        ans += v*(v-1)//2

    print(ans)
    
    return



# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [ int(next(tokens)) for _ in range(N) ]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
