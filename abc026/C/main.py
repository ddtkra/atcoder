#!/usr/bin/env python3
import sys


def solve(N: int, B: "List[int]"):
    B = [0] * 2 + B
    s = [1] * (N+1)

    for i in range(N,0,-1):
        if B[i:N+1].count(i) == 0:
            s[i] = 1
        else:
            l = [s[i+j] for j,x in enumerate(B[i:N+1]) if x == i]    
            s[i] = max(l) + min(l) + 1

    print(s[1])
    # print(s)

    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    B = [int(next(tokens)) for _ in range(N - 2 + 1)]  # type: "List[int]"
    solve(N, B)

if __name__ == '__main__':
    main()
