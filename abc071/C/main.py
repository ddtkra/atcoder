#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    from collections import Counter

    c = Counter(A)

    a = 0
    b = 0

    for k,v in sorted(c.items(), reverse=True):
        if(v >= 4):
            if(a == 0 and b == 0):
                a = k
                b = k
                break
            else:
                b = k
                break
        if(2 <= v < 4):
            if(a != 0):
                b = k
                break
            else:
                a = k

    print(a*b)

    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [ int(next(tokens)) for _ in range(N) ]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
