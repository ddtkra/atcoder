#!/usr/bin/env python3
import sys


def solve(N: int):
    def divisors(n):
        divisors = []
        for i in range(1, int(n**0.5)+1):
            if n % i == 0:
                divisors.append(i)
                if i != n // i:
                    divisors.append(n//i)
        return divisors

    n = 2025-N
    ans = []
    d = divisors(n)
    for i in d:
        if n//i < 10 and i < 10:
            ans.append(str(i)+' x '+str(n//i))

    ans.sort()

    for i in ans:
        print(i)

    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)

if __name__ == '__main__':
    main()
