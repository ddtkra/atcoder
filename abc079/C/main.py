#!/usr/bin/env python3
import sys


def solve(ABCD: str):
    l = list(str(ABCD))
    ope =('+', '-')

    import itertools
    for i in itertools.product(ope, repeat=3):
        t = int(l[0])
        tl = []
        tl.append(l[0])
        for j,x in enumerate(i):
            tl.append(x)
            tl.append(l[j+1])
            if(i[j] == '+'):
                t += int(l[j+1])
            else:
                t -= int(l[j+1])

        # print(tl)
        if(t == 7):
            tl.append('=7')
            # print(tl)
            print(''.join(map(str,tl)))
            sys.exit()

    l = list(map(int, l))
    print('%d+%d+%d+%d=7' % (l[0], l[1], l[2], l[3]))

    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    ABCD = str(next(tokens))  # type: int
    solve(ABCD)

if __name__ == '__main__':
    main()
