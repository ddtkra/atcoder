#!/usr/bin/env python3
import sys
import math

def solve(S: str):
    s0 = [0,1]*math.ceil(len(S)/2)
    s1 = [1,0]*math.ceil(len(S)/2)

    d0 = 0
    for i in range(len(S)):
        if(S[i] != str(s0[i])):
            # print(S[i],s0[i])
            d0 += 1

    d1 = 0
    for i in range(len(S)):
        if(S[i] != str(s1[i])):
            d1 += 1

    # print(d0)
    # print(d1)
    print(min(d1,d0))
    
    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = str(next(tokens))  # type: int
    solve(S)

if __name__ == '__main__':
    main()
