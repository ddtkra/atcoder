#!/usr/bin/env python3
import sys


def solve(N: int, K: int, S: str):
    sel = []
    ts = 0
    for i in range(len(S)):
        if(S[i] == '0'):
            ts += 1
        elif(S[i] == '1'):
            if(ts > 0):
                sel.append(ts)
            ts = 0

    sel.sort(reverse=True)
    ans = S.count('1')
    print(ans)
    print(sel)
    for i in range(min(len(sel),K)):
        ans += sel[i]

    print(ans)
    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    S = str(next(tokens))  # type: str
    solve(N, K, S)

if __name__ == '__main__':
    main()
