#!/usr/bin/env python3
import sys
sys.setrecursionlimit(10000000)
INF = 1<<32
from functools import lru_cache

def solve(N: int, K: int):
    @lru_cache(maxsize=None)
    def f(n: int, k:int):
        print('test: ', n, k)
        if n <= 9 and k == 1:
            return n
        elif n <= 9:
            return 0
            
        return f(n//10, k-1)*(n%10) + f(n//10-1, k) *(9-n%10) + f(n//10, k)
    
    print(f(N, K))

    return



def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(N, K)

if __name__ == '__main__':
    main()
