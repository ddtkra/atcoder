#!/usr/bin/env python3
import sys
sys.setrecursionlimit(10000000)
INF = 1<<32


def solve(N: int, K: int, p: "List[int]"):
    pi = [p[i]*(p[i]+1)/(2*p[i]) for i in range(N)]
    api = [0] * (N+1)
    for i in range(N):
        api[i+1] = api[i] + pi[i]
    ans = 0
    for i in range(0, N-K+1):
        ans = max(ans, api[K+i]-api[i])

    print(ans)
    return



def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    p = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, p)

if __name__ == '__main__':
    main()
