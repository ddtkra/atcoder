#!/usr/bin/env python3
import sys


def solve(N: int, S: "List[str]", P: "List[int]"):
    # ソートのためにSPを合体
    SP =[]
    for i in range(N):
        SP.append([S[i],P[i]])

    # 都市名は昇順にし、同じ年の場合は降順でソートする 
    t = sorted(SP, key=lambda x:(x[0],-x[1]))

    ans = []
    for x in t:
        for j in range(N):
            x1,x2 = x
            if(x1 == S[j] and x2 == P[j]):
                ans.append(j+1)

    for i in ans:
        print(i)
    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = [str()] * (N)  # type: "List[str]" 
    P = [int()] * (N)  # type: "List[int]" 
    for i in range(N):
        S[i] = next(tokens)
        P[i] = int(next(tokens))
    solve(N, S, P)

if __name__ == '__main__':
    main()
