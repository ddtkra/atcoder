#!/usr/bin/env python3
import sys


def solve(N: int, S: "List[str]"):
    m = len([i for i in S if i[0] == 'M'])
    a = len([i for i in S if i[0] == 'A'])
    r = len([i for i in S if i[0] == 'R'])
    c = len([i for i in S if i[0] == 'C'])
    h = len([i for i in S if i[0] == 'H'])

    print(
        m*a*r+
        m*a*c+
        m*a*h+
        m*r*c+
        m*r*h+
        m*c*h+
        a*r*c+
        a*r*h+
        a*c*h+
        r*c*h
        )

    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = [ next(tokens) for _ in range(N) ]  # type: "List[str]"
    solve(N, S)

if __name__ == '__main__':
    main()
