#!/usr/bin/env python3
import sys


def solve(N: int, A: int, B: int, s: "List[str]", d: "List[int]"):
    ans = 0
    for ss, dd in zip(s, d):
        dx = dd
        if(dx > B):
            dx = B
        elif(dx < A):
            dx = A

        if(ss == 'West'):
            ans -= dx
        else:
            ans += dx

    if(ans == 0):
        print(0)
    elif(ans < 0):
        print('West '+str(abs(ans)))
    else:
        print('East '+str(ans))

    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    s = [str()] * (N)  # type: "List[str]" 
    d = [int()] * (N)  # type: "List[int]" 
    for i in range(N):
        s[i] = next(tokens)
        d[i] = int(next(tokens))
    solve(N, A, B, s, d)

if __name__ == '__main__':
    main()
