#!/usr/bin/env python3
import sys


def solve(T: int, S: "List[str]"):
    
    ans = []
   
    for j,x in enumerate(S):
        tans = 0
        # print('loop: %d', j)
        i = 0
        while(i < len(x)):  
            if(x[i] == 't'):
                if(''.join(x[i:i+5]) == 'tokyo'):
                    tans += 1
                    i += 5
                else:
                    i += 1
            elif(x[i] == 'k'):
                if(''.join(x[i:i+5]) == 'kyoto'):
                    # print('test(k): %d', i)
                    tans += 1
                    i += 5
                else:
                    i += 1
            else:
                i += 1

        ans.append(tans)

    for i in ans:
        print(i)
    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    T = int(next(tokens))  # type: int
    S = [ next(tokens) for _ in range(T) ]  # type: "List[str]"
    solve(T, S)

if __name__ == '__main__':
    main()
