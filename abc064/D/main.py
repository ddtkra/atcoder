#!/usr/bin/env python3
import sys


def solve(N: int, S: str):
    from collections import deque
    d = deque(list(S))
    st = 0
    ad = deque()

    while(len(d)):
        t = d.pop()
        if t == ')':
            ad.appendleft(t)
            st += 1
        else:
            if(st > 0):
                st -= 1
            else:
                ad.append(')')

            ad.appendleft('(')
                    
    ad.appendleft('(' * st)
        
    print(''.join(ad))

    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    solve(N, S)

if __name__ == '__main__':
    main()
