#!/usr/bin/env python3
import sys
from collections import deque

def solve(A: int, B: int, C: int, D: int, E: int):
    q = deque([])

    l = [A,B,C,D,E]
    for i in [0,9,8,7,6,5,4,3,2,1]:
        for j in l:
            if(j%10 == i):
                q.append(j)

    # print(q)
    ans = 0
    while len(q) > 0:
        x = q.popleft()
        if(x%10 == 0 or q == deque([])):
            ans += x
        else:
            ans += x+10-x%10
        # print(ans)
    print(ans)
    return


# Generated by 1.1.3 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    E = int(next(tokens))  # type: int
    solve(A, B, C, D, E)

if __name__ == '__main__':
    main()
