#!/usr/bin/env python3
import sys
import bisect

def solve(N: int, w: "List[int]"):
    
    ans = []

    for i in range(N):
        llist = [j for j in ans if(j >= w[i])]

        if(len(llist)):
            ans.sort()
            idx = bisect.bisect_right(ans, w[i])
            if(idx < len(ans)):
                if(ans[idx-1] == w[i]):
                    ans[idx-1] = w[i]
                else:
                    ans[idx] = w[i]
            else:
                ans[idx-1] = w[i]
        else:
            ans.append(w[i])
    print(len(ans))
    
    return



# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    w = [ int(next(tokens)) for _ in range(N) ]  # type: "List[int]"
    solve(N, w)

if __name__ == '__main__':
    main()
