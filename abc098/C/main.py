#!/usr/bin/env python3
import sys


def solve(N: int, S: str):
    lw = [0] * N
    re = [0] * N

    if(S[0] == 'W'):
        lw[0] = 1
    if(S[N-1] == 'E'):
        re[N-1] = 1

    for i in range(1,N):
        if(S[i] == 'W'):
            lw[i] = lw[i-1] + 1
        else:
            lw[i] = lw[i-1]

    for i in reversed(range(0, N-1)):
        if(S[i] == 'E'):
            re[i] = re[i+1] + 1
        else:
            re[i] = re[i+1]

    # print(lw)
    # print(re)

    ans = 1000000000
    for i in range(N):
        if(i == 0):
            ans = min(ans, re[i+1])
        elif(i == N-1):
            ans = min(ans, lw[i-1])
        else:
            ans = min(ans,lw[i-1]+re[i+1])

    print(ans)

    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    solve(N, S)

if __name__ == '__main__':
    main()
