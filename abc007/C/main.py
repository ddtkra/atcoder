#!/usr/bin/env python3

INF = 1000000
R,C = map(int,input().split())
sy,sx = map(int,input().split())
gy,gx = map(int,input().split())

maze = [input() for i in range(R)]



# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    # Failed to predict input format
    from collections import deque

    d = [[INF] * (C) for i in range(R)]

    # dx = [-1,0,1,0]
    # dy = [0,1,0,-1]
    dx = [[-1,0], [1,0], [0,-1], [0,1]]

    que = deque()
    que.appendleft([sy-1,sx-1])
    d[sy-1][sx-1] = 0

    while(len(que)):
        ly,lx = que.pop()
        # if(lx == gx-1 and ly  == gy-1):
        #     break

        for i in dx:
            nx = i[0]+lx
            ny = i[1]+ly
            if(0 <= nx < C and 0 <= ny < R and d[ny][nx] == INF and maze[ny][nx] != '#'):
                que.appendleft([ny,nx])
                d[ny][nx] = d[ly][lx]+1

    # # for i in d[:5]:
    #     print(i[:5])
    print(d[gy-1][gx-1])



    pass

if __name__ == '__main__':
    main()
